// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="Header-Left"
        >
          <Icon>
            <pure(Home) />
          </Icon>
        </div>,
        <div
          className="Header-Center"
        >
          <Icon>
            <pure(RssFeed) />
          </Icon>
          <WithStyles(Typography)
            color="inherit"
            variant="subheading"
          >
            +
          </WithStyles(Typography)>
          <Icon>
            <TiSocialTwitter />
          </Icon>
          <WithStyles(Typography)
            color="inherit"
            variant="subheading"
          >
            Feed
          </WithStyles(Typography)>
        </div>,
        <div
          className="Header-Right"
        />,
      ],
      "className": "Header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon>
            <pure(Home) />
          </Icon>,
          "className": "Header-Left",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <pure(Home) />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Icon>
              <pure(RssFeed) />
            </Icon>,
            <WithStyles(Typography)
              color="inherit"
              variant="subheading"
            >
              +
            </WithStyles(Typography)>,
            <Icon>
              <TiSocialTwitter />
            </Icon>,
            <WithStyles(Typography)
              color="inherit"
              variant="subheading"
            >
              Feed
            </WithStyles(Typography)>,
          ],
          "className": "Header-Center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <pure(RssFeed) />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "+",
              "color": "inherit",
              "variant": "subheading",
            },
            "ref": null,
            "rendered": "+",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TiSocialTwitter />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Feed",
              "color": "inherit",
              "variant": "subheading",
            },
            "ref": null,
            "rendered": "Feed",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "Header-Right",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="Header-Left"
          >
            <Icon>
              <pure(Home) />
            </Icon>
          </div>,
          <div
            className="Header-Center"
          >
            <Icon>
              <pure(RssFeed) />
            </Icon>
            <WithStyles(Typography)
              color="inherit"
              variant="subheading"
            >
              +
            </WithStyles(Typography)>
            <Icon>
              <TiSocialTwitter />
            </Icon>
            <WithStyles(Typography)
              color="inherit"
              variant="subheading"
            >
              Feed
            </WithStyles(Typography)>
          </div>,
          <div
            className="Header-Right"
          />,
        ],
        "className": "Header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon>
              <pure(Home) />
            </Icon>,
            "className": "Header-Left",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <pure(Home) />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Icon>
                <pure(RssFeed) />
              </Icon>,
              <WithStyles(Typography)
                color="inherit"
                variant="subheading"
              >
                +
              </WithStyles(Typography)>,
              <Icon>
                <TiSocialTwitter />
              </Icon>,
              <WithStyles(Typography)
                color="inherit"
                variant="subheading"
              >
                Feed
              </WithStyles(Typography)>,
            ],
            "className": "Header-Center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <pure(RssFeed) />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "+",
                "color": "inherit",
                "variant": "subheading",
              },
              "ref": null,
              "rendered": "+",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TiSocialTwitter />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Feed",
                "color": "inherit",
                "variant": "subheading",
              },
              "ref": null,
              "rendered": "Feed",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "Header-Right",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
